### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


type AuthResponse {
  token: String!
  user: User!
}

type Currency {
  exchangeRateDollar: Float!
  id: ID!
  name: String!
}

type CurrencyAccount {
  balance: Float!
  currency: Currency!
  id: ID!
  walletId: String!
}

input CurrencyAccountInput {
  balance: Float!
  currencyName: String!
  walletId: String!
}

"""Monetary value type"""
scalar Monetary

type Mutation {
  addCurrencyAccount(data: CurrencyAccountInput!): User!
  deleteCurrencyAccount(currencyName: String!): User!
  dropAndSeedDB: Boolean!
  login(email: String!, password: String!): AuthResponse!
  register(data: RegisterInput!): AuthResponse!
  submitTransaction(data: SubmitTransactionInput!): Transaction!
}

type Query {
  currencies: [Currency!]!
  me: User!
  otherUsers: [User!]!
  transaction(transactionId: String!): Transaction!
  transactions: [Transaction!]!
}

input RegisterInput {
  description: String
  email: String!
  maxAmountPerTransactionDollar: Float!
  name: String!
  password: String!
}

input SubmitTransactionInput {
  amount: Float!
  currencyName: String!
  targetUserId: String!
}

type Transaction {
  amount: Float!
  createdAt: String!
  currency: Currency!
  error: String
  id: ID!
  processedAt: String
  source: User!
  state: String!
  target: User!
}

type User {
  currencyAccounts: [CurrencyAccount!]!
  description: String
  email: String!
  id: ID!
  maxAmountPerTransactionDollar: Float!
  name: String!
}
